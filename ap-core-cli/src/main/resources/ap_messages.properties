# *******************************************************************************
# * COPYRIGHT Ericsson 2016
# *
# * The copyright to the computer program(s) herein is the property of
# * Ericsson Inc. The programs may be used and/or copied only with written
# * permission from Ericsson Inc. or in accordance with the terms and
# * conditions stipulated in the agreement/contract under which the
# * program(s) have been supplied.
# *******************************************************************************

## General success messages
command.success = Successful
node.command.successful = Initiated. Run ''ap status -n {0}'' for progress
project.command.successful = Initiated. Run ''ap status -p {0}'' for progress

##  Generic messages
project.not.found = Project does not exist
project.not.found.solution = Provide a valid project name
project.size.unsupported = Provide a project with a valid size
node.not.found = Node does not exist
node.not.found.solution = Provide a valid node name
ap.node.not.found = Node is not managed by Auto Provisioning
ap.node.not.found.solution = Provide a node managed by Auto Provisioning
deployment.not.found = Deployment does not exist
deployment.not.found.solution = Provide a valid deployment name
help.ap = For more information on available commands run 'help ap'

## Error messages
failure.general = Internal Server Error
failure.error.solution = Fix errors and execute the command again
command.partial.success = Successful for {0}/{1} node(s)
command.failure = Failure

invalid.command.syntax = Invalid command syntax
invalid.command.syntax.solution = For correct command syntax run ''help ap {0}''
node.invalid.state = Node is not in the correct state to perform the operation [{0}]
node.invalid.state.solution = Ensure node is in correct state before executing the command. Valid state(s) are [{0}]
project.invalid.state = Project node(s) [{0}] are not in the correct state to execute the command
project.invalid.state.solution  = Ensure project nodes are in the correct state before executing the command. Valid state(s) are: [{0}]
ap.node.exists = Data for {0} already exists
ap.node.exists.solution = Delete the existing Auto Provisioning data using the ''ap delete -n {0}'' command and rerun the usecase

##  Generic solution messages
error.solution.log.viewer = Use Log Viewer for more information
unsupported.node.type.solution = Provide a valid node type. Valid types are: [{0}]

#
## Bind messages
#
hwid.already.used  = The hardware serial number {0} is already bound to node {1} in AP
hwid.already.used.duplicate  = The hardware serial number {0} is already bound to node {1} in ENM
hwid.already.used.solution = Provide a hardware serial number that is not bound to another node
hwid.invalid.format = The hardware serial number {0} is not valid
hwid.invalid.format.solution = See AP online help for the correct format

nodename.not.set = Missing mandatory value for node name
hwid.not.set = Missing mandatory value for hardware serial number
failure.parsing.csv  = Invalid csv substitution file

#
## Resume and Cancel messages
#
not.waiting.for.cancel.resume = Node is not waiting for resume or cancel
not.waiting.for.cancel.resume.solution = Command can only be used on node waiting for resume or cancel


#
## Skip message
#
not.waiting.for.skip = Node is not waiting for skip
not.waiting.for.skip.solution = Command can only be used on node waiting for skip

## Command Not Supported
command.not.supported.for.type = Unsupported command for this node type
command.not.supported.for.type.solution = Refer to Auto Provisioning Online Help for more information

#
## Download messages
#
download.artifact.not.permitted = Node is not in correct state to execute the requested operation. See AP Online help for more information.
download.artifact.not.permitted.solution = Not applicable
download.failed = AP Download Failed

## Upload messages
#
configuration.file.not.found = Node does not contain any matching configuration file {0}
configuration.file.not.found.solution = Rename the configuration file to match the name of an existing configuration file
configuration.file.not.supported = The file type for file {0} is not supported by the upload command
configuration.file.not.supported.solution = Rename the configuration file to match the name of an existing configuration that is supported by the upload command

#
## View/Read messages
#
projects.found = {0} project(s) found

#
## Hardware Replace messages
#
mo.not.found = No {0} MO exists in the database for node {1}
mo.not.found.solution = No solution is available as critical data is missing from the database for this node

#
## Access Control messages
#
access.control.not.authorized = Insufficient access rights to execute the command
access.control.not.authorized.solution = Contact the system administrator to update the user profile

#
## CSV Generation Exception messages
#

csv.generation.exception.error.order = AP Order Failed. Project is ordered without a csv.
csv.generation.exception.error.download = AP Download Failed. Provide a valid projectInfo.xml file.

## Validation messages
validation.ipaddress.unique.in.database = IP address {0} is already in use (found in {1})

validation.artifact.format.failure = Artifact file {0} is not a well-formed file
validation.artifact.schema.failure = Artifact {0} failed to validate against schema. {1}
validation.artifact.schema.access = Issue accessing schema for {0}
validation.artifact.file.duplicate.failure = Artifact {0} is duplicated in {1} elements of nodeInfo.xml
validation.nodename.unique.failure = ENM node already exists NetworkElement={0}
validation.artifact.name.reserved = Artifact file name {0} is invalid. File name {1} is system reserved

validation.node.exists.failure = Node={0} already exists in project {1}

validation.project.zip.file.extension = Invalid file extension {0}. 'Only .zip supported'
validation.project.zip.file.format = Invalid zip archive format
validation.project.zip.file.schema.node.failure = {0} failed to validate against schema. {1}
validation.project.zip.file.nodeinfo.attribute.not.set = The value of node attribute {0} is not set in nodeInfo.xml file
validation.project.zip.file.node.attribute.not.supported = Unsupported {0} [{1}] in nodeInfo.xml
validation.project.zip.file.node.type.not.supported = Unsupported node type {0} in nodeInfo.xml. Valid node types are: [{1}]
validation.project.zip.file.node.nodeidentifier.not.supported = Unsupported node identifier {0} in nodeInfo.xml
validation.project.zip.file.node.nodeidentifier.not.determined = Node Identifier could not be determined. Use \
''cmedit describe -neType <NodeType>'' for supported Node/Model Identifiers, and update the nodeInfo.xml to align

validation.project.file.content.not.listed = Invalid files present in project file. Contains files not listed in nodeInfo.xml

validation.project.exists.failure = Project "{0}" already exists

validation.projectinfo.missing = No projectInfo.xml file found in project file
validation.projectinfo.multiple.files.found = Multiple projectInfo.xml files found in project file
validation.projectinfo.file.invalid.location = projectInfo.xml is not in root of project file

validation.nodeinfo.missing = nodeInfo.xml is not found
validation.nodeinfo.file.found.not.in.node.folder = nodeInfo.xml found outside node folders
validation.nodeinfo.file.artifact.listed.not.in.node.folder = Artifact {0} referenced in nodeInfo.xml is not found

validation.duplicate.node.ipaddress = Duplicate IP address {0}
validation.duplicate.node.name = Duplicate node name {0}
validation.xml.parse.error = Unable to parse {0} in nodeInfo.xml

validation.duplicate.node.hardware.serial.number = Duplicate hardware serial number {0}
validation.hardware.serial.number.unique.in.database = Project ''{0}'' import has failed because the hardware serial number ''{1}'' is already in use by ''{2}'' with ''{3}'' in AP.
validation.hardware.serial.number.unique.in.database.duplicatenode = Project ''{0}'' import has failed because the hardware serial number ''{1}'' is already in use by ''{2}'' in ENM.

validation.duplicate.node.fingerprint = Duplicate fingerprint {0}

validation.project.error = Error(s) found validating project
validation.project.empty = Project file is empty
validation.project.maximum.file.size.error = Project file is larger than the maximum size allowed (5MB).

validation.xml.parse.file = Error parsing {0} file in {1}
validation.xml.parse.projectinfo = Error parsing projectInfo.xml file

validation.batch.subdirectory.found = Sub-directory is not allowed in batch project
validation.batch.nodeinfo.missing = nodeInfo.xml is not found in {0}
validation.batch.csv.multiple.files.found = Multiple csv substitution files found in {0}
validation.batch.csv.missing = csv substitution file is not found in {0}
validation.batch.csv.data.header.mismatch = The number of data values do not match the number of headers in {0}
validation.batch.csv.file.empty = csv substitution file {0} is empty (both header and data row required)
validation.batch.csv.file.no.data = csv substitution file {0} contains no data, only presumed header row
validation.batch.csv.data.header.duplicates = Duplicate header(s) [{0}] found in csv substitution file
validation.batch.nodeinfo.mandatory.substitution.missing = Mandatory variable substitution of element {0} in nodeInfo.xml is not present
validation.batch.csv.substitution.variable.missing = Cannot substitute element tag(s) [{0}] from file {1}. Expected matching substitution header(s) not in csv file
validation.batch.csv.data.nodename.duplicates = Duplicate node name(s) [{0}] found in csv substitution file
validation.batch.csv.data.nodename.empty = Empty node name found in csv substitution file at row(s) [{0}]

validation.node.does.not.exist.failure = Node {0} does not exist
validation.controlling.node.does.not.exist.failure = Controlling node {0} does not exist
validation.imported.project.name.does.not.match.enm.project.name = Imported AP project: node {0} has been managed by existing ENM AP project {1}, it can not be managed by another project {2}
validation.node.not.synchronized.in.enm.failure = Node {0} is Unsynchronized

validation.reconfig.node.type.not.supported = Unsupported node type {0} for node {1}. Valid node types for reconfiguration are: [{2}]
validation.reconfig.node.in.active.workflow = Node {0} is in incorrect state for reconfiguration - {1}. Valid states for reconfiguration are: {2}

validation.expansion.node.type.not.supported = Unsupported node type {0} for node {1}. Valid node types for expansion: [{2}]
validation.expansion.node.in.active.workflow = Node {0} is in incorrect state for expansion - {1}. Valid states for expansion are: {2}

validation.replace.node.type.not.supported = Unsupported node type {0} for node {1}. Valid node types for hardware replace: [{2}]

validation.configuration.profiles.error = Error(s) found validating profile files
validation.configuration.profiles.mandatory.fragments.missing = Mandatory fragment missing {0}

validation.remote.file.format.not.supported = Unsupported file format for artifact file {0}. The format {1} is not supported by remote node {2} with node type {3}
validation.remote.node.not.synchronized.in.enm.failure = Remote node {0} is Unsynchronized
validation.remote.node.does.not.exist.failure = Remote node {0} does not exist
validation.remote.node.name.not.set = The nodename attribute for remoteNodeConfiguration element with value {0} is not set in nodeInfo.xml file

validation.migration.node.type.not.supported = Unsupported node type {0} for node {1}. Valid node types for migration: [{2}]
